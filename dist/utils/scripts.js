import commandExists from 'command-exists';
import { execa } from 'execa';
import chalk from 'chalk';
import { warnMsg } from '../utils/index.js';
export const cmdExists = (bin) => new Promise(resolve => commandExists(bin, (err, exists) => resolve(exists)));
export default class Scripts {
    constructor(proc) {
        this.proc = proc;
        this.add = (bin, ...args) => {
            this.stack.push({ bin, args: Array.from(args) });
            return this;
        };
        this.addMany = (scripts) => {
            scripts.forEach(s => this.add(s.bin, ...s.args));
            return this;
        };
        this.exec = async (cwd) => {
            const opts = {
                stdout: this.proc.stdout,
                stdin: this.proc.stdin,
                cwd
            };
            for (let i = 0; i < this.stack.length; i++) {
                const { bin, args } = this.stack[i];
                if (await cmdExists(bin)) {
                    await execa(bin, args, opts);
                }
                else {
                    warnMsg(chalk.blue(bin + (args ? ' ' + args.join(' ') : '')) +
                        ' failed. Command ' +
                        chalk.bold(chalk.blue(bin)) +
                        ' does not exist.');
                }
            }
            return;
        };
        this.stack = [];
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NyaXB0cy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9zY3JpcHRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sYUFBYSxNQUFNLGdCQUFnQixDQUFBO0FBQzFDLE9BQU8sRUFBRSxLQUFLLEVBQVcsTUFBTSxPQUFPLENBQUE7QUFDdEMsT0FBTyxLQUFLLE1BQU0sT0FBTyxDQUFBO0FBQ3pCLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQTtBQUszQyxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsQ0FBQyxHQUFXLEVBQUUsRUFBRSxDQUN2QyxJQUFJLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLEVBQUUsTUFBTSxFQUFFLEVBQUUsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFBO0FBRTlFLE1BQU0sQ0FBQyxPQUFPLE9BQU8sT0FBTztJQUcxQixZQUFvQixJQUFvQjtRQUFwQixTQUFJLEdBQUosSUFBSSxDQUFnQjtRQUl4QyxRQUFHLEdBQUcsQ0FBQyxHQUFXLEVBQUUsR0FBRyxJQUFjLEVBQUUsRUFBRTtZQUN2QyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUE7WUFDaEQsT0FBTyxJQUFJLENBQUE7UUFDYixDQUFDLENBQUE7UUFDRCxZQUFPLEdBQUcsQ0FBQyxPQUEwQyxFQUFFLEVBQUU7WUFDdkQsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFBO1lBQ2hELE9BQU8sSUFBSSxDQUFBO1FBQ2IsQ0FBQyxDQUFBO1FBRUQsU0FBSSxHQUFHLEtBQUssRUFBRSxHQUFXLEVBQUUsRUFBRTtZQUMzQixNQUFNLElBQUksR0FBb0I7Z0JBQzVCLE1BQU0sRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU07Z0JBQ3hCLEtBQUssRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUs7Z0JBQ3RCLEdBQUc7YUFDSixDQUFBO1lBRUQsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO2dCQUMxQyxNQUFNLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUE7Z0JBRW5DLElBQUksTUFBTSxTQUFTLENBQUMsR0FBRyxDQUFDLEVBQUU7b0JBQ3hCLE1BQU0sS0FBSyxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUE7aUJBQzdCO3FCQUFNO29CQUNMLE9BQU8sQ0FDTCxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO3dCQUNsRCxtQkFBbUI7d0JBQ25CLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQzt3QkFDM0Isa0JBQWtCLENBQ3JCLENBQUE7aUJBQ0Y7YUFDRjtZQUVELE9BQU07UUFDUixDQUFDLENBQUE7UUFuQ0MsSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUE7SUFDakIsQ0FBQztDQW1DRiJ9